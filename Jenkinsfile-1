pipeline {
  agent any
  environment {
    //once you sign up for Docker hub, use that user_id here
    registry = "ali0078/grafana:v1.0.0"
    //- update your credentials ID after creating credentials for connecting to Docker Hub
    registryCredential = 'dockerhub'
    dockerImage = ''
}
  stages {
    stage('Docker Version') {
      steps {
        sh 'docker --version'
      }
    }

    // Building Docker images
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry
        }
      }
    }
    
//   stage('Docker build grafana image') {
//  steps {
//    sh 'docker build -t grafana grafana/'
 //     }
 //   }
    stage('Docker tag image') {
  steps {
    sh 'docker tag  grafana ali0078/grafana:v1.0.0'
      }
    }
     stage('Docker run image') {
  steps {
    sh 'docker run -d --rm grafana ali0078/grafana:v1.0.0'
      }
    }
    stage('Container Vulnerability Scanning') {
  steps {
    sh 'grype ali0078/grafana:v1.0.0 --scope AllLayers'
  }
    } 
     stage('Container BOM with syft') {
  steps {
    sh 'syft ali0078/grafana:v1.0.0 --scope all-layers'
  }
    } 
 stage('output security scan results to table format' ) {
  steps {
    sh 'grype ali0078/grafana:v1.0.0 -o table > report'
  }
    } 
    stage('output security scan results to csv format' ) {
  steps {
    sh 'grype ali0078/grafana:v1.0.0 -o template -t csv.tmpl > report.csv'
  }
    } 
     
     // Uploading Docker images into Docker Hub
    stage('Upload Image') {
     steps{    
         script {
            docker.withRegistry('', registryCredential ) {
            dockerImage.push()
            }
        }
      }
    }
    
  }
}
// Ali to fail pipeline on high vulnerabilty using grype flag fix them then push the container to the repository, adding anchore/syft to provide software BOM, see hot to present the finding may be in grafana or artifactory
// penetration testing with owasp
